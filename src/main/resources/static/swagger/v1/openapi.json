{
  "openapi": "3.0.1",
  "info": {
    "title": "Users Service",
    "description": "This is the API documentation of manage users service",
    "contact": {
      "email": "muhamed.s.vrajolli@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/users/{id}": {
      "get": {
        "tags": [
          "users-controller"
        ],
        "summary": "Get user by id",
        "description": "Get user by id",
        "operationId": "getUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/UserModel"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "users-controller"
        ],
        "summary": "Updates an existing user",
        "description": "Updates an existing user. Provide the correct user type, and the specific attributes of that user type",
        "operationId": "updateUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users-controller"
        ],
        "summary": "Deletes an existing user",
        "description": "Deletes an existing user.",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "description": "The id of user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "NO CONTENT",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModel"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users-controller"
        ],
        "summary": "Get users",
        "description": "Get all users or only specific type",
        "operationId": "getUsers",
        "parameters": [
          {
            "name": "user_type",
            "in": "query",
            "description": "type of user from one of the values: admin, teacher, student.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "description": "Returns a pageable, so you can send paging parameters",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PageUserModel"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "users-controller"
        ],
        "summary": "Creates a new user",
        "description": "Creates a new user of the provided type",
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModel"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "firstName": {
            "type": "string",
            "example": "John",
            "description": "first name of the user"
          },
          "lastName": {
            "type": "string",
            "description": "last name of the user"
          },
          "email": {
            "type": "string",
            "description": "email of the user"
          },
          "password": {
            "type": "string",
            "description": "password of the user"
          },
          "userType": {
            "type": "string",
            "description": "Type of the user",
            "enum": [
              "admin",
              "teacher",
              "student"
            ]
          },
          "adminId": {
            "type": "integer",
            "format": "int64",
            "description": "admin id exclusive to user type admin"
          },
          "teacherId": {
            "type": "integer",
            "format": "int64",
            "description": "teacher id exclusive to user type teacher"
          },
          "studentId": {
            "type": "integer",
            "format": "int64",
            "description": "student id exclusive to user type student"
          },
          "classroomName": {
            "type": "string",
            "description": "classroom name exclusive to user type student"
          }
        }
      },
      "Pageable": {
        "type": "object",
        "properties": {
          "page": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PageUserModel": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserModel"
            }
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PageableObject": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "paged": {
            "type": "boolean"
          },
          "unpaged": {
            "type": "boolean"
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Sort": {
        "type": "object",
        "properties": {
          "sorted": {
            "type": "boolean"
          },
          "unsorted": {
            "type": "boolean"
          },
          "empty": {
            "type": "boolean"
          }
        }
      }
    }
  }
}